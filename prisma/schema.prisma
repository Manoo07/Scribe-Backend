// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int         @id @default(autoincrement())
  name              String
  email             String      @unique
  password          String
  role              Role
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
  classrooms        Classroom[] @relation("ClassroomUsers") // classrooms user is a member of
  createdClassrooms Classroom[] @relation("ClassroomCreator") // classrooms user created
  userMessages      Message[]   @relation("UserMessages")
}

model Classroom {
  id          Int       @id @default(autoincrement())
  name        String
  createdById Int
  files       File[]
  messages    Message[]
  createdBy   User      @relation("ClassroomCreator", fields: [createdById], references: [id])
  users       User[]    @relation("ClassroomUsers")
  createdAt   DateTime  @default(now())
}

model File {
  id          Int       @id @default(autoincrement())
  filename    String
  url         String
  classroom   Classroom @relation(fields: [classroomId], references: [id])
  classroomId Int
  createAt    DateTime  @default(now())
}

model Message {
  id          Int       @id @default(autoincrement())
  content     String
  user        User      @relation("UserMessages", fields: [userId], references: [id])
  userId      Int
  createAt    DateTime  @default(now())
  classroom   Classroom @relation(fields: [classroomId], references: [id])
  classroomId Int
  createdAt   DateTime  @default(now())
}

enum Role {
  STUDENT
  INSTRUCTOR
  ADMIN
}
